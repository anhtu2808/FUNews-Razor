<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - FPT University News</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/FUNewsRazorPages.styles.css" asp-append-version="true" />
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet" />

	@await RenderSectionAsync("Styles", required: false)
</head>
<body>
	<header>
		<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
			<div class="container">
				<a class="navbar-brand" asp-area="" asp-page="/Index">FPT University News</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
						aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
					@using System.Security.Claims
					@{
						var isLoggedIn = User.Identity.IsAuthenticated;
						var role = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
					}

					<!-- Menu bên trái -->
					<ul class="navbar-nav me-auto">
						@if (isLoggedIn && role == "2")
						{
							<!-- Manage Dropdown -->
							<li class="nav-item dropdown">
								<a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown">Manage</a>
								<ul class="dropdown-menu">
									<li><a class="dropdown-item" asp-page="/NewsArticle/ManageNews">Manage News</a></li>
								</ul>
							</li>
						}

						@if (isLoggedIn && role == "3")
						{
							<!-- Admin Dropdown -->
							<li class="nav-item dropdown">
								<a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown">Admin</a>
								<ul class="dropdown-menu">
									<li><a class="dropdown-item" asp-page="/Admin/Dashboard">
										<i class="bi bi-speedometer2 me-2"></i>Dashboard
									</a></li>
									<li><hr class="dropdown-divider"></li>
									<li><a class="dropdown-item" asp-page="/NewsArticle/ApproveNewsArticle">
										<i class="bi bi-check-circle me-2"></i>Approve News
									</a></li>
									<li><a class="dropdown-item" asp-page="/Tags/Index">
										<i class="bi bi-tags me-2"></i>Tags
									</a></li>
									<li><a class="dropdown-item" asp-page="/Categories/Index">
										<i class="bi bi-folder me-2"></i>Categories
									</a></li>
									<li><a class="dropdown-item" asp-page="/Account/ManageAccount">
										<i class="bi bi-people me-2"></i>Accounts
									</a></li>
									<li><hr class="dropdown-divider"></li>
									<li><a class="dropdown-item" asp-page="/Admin/SignalRDebug">
										<i class="bi bi-bug me-2"></i>SignalR Debug
									</a></li>
								</ul>
							</li>
						}
					</ul>

					<!-- Auth bên phải -->
					<ul class="navbar-nav ms-auto">
						@if (!isLoggedIn)
						{
							<li class="nav-item">
								<a class="nav-link text-dark" asp-page="/Account/Login">Login</a>
							</li>
						}
						else
						{
							<li class="nav-item">
								<form method="post" asp-page="/Account/Logout" class="d-inline">
									<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
								</form>
							</li>
						}
					</ul>
				</div>
			</div>
		</nav>
	</header>
	<div class="container">
		<main role="main" class="pb-3">
			@RenderBody()
		</main>
	</div>

	<footer class="border-top footer text-muted">
		<div class="container">
			&copy; 2025 - FUNewsRazorPages - <a asp-area="" asp-page="/Privacy">Privacy</a>
		</div>
	</footer>

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
	<script src="~/js/userHub-connection.js" asp-append-version="true"></script>

	@* Global UserHub Connection for All Logged-in Users *@
	@if (User.Identity.IsAuthenticated)
	{
		var accountEmail = Context.Session.GetString("AccountEmail");
		var userRole = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
		<script>
			document.addEventListener('DOMContentLoaded', async function() {
				const currentUserEmail = "@accountEmail";
				const currentUserRole = "@userRole";
				
				console.log("Layout: Attempting UserHub connection for email:", currentUserEmail);
				console.log("Layout: User role:", currentUserRole);
				
				if (currentUserEmail && window.userHubManager) {
					try {
						await window.userHubManager.connect(currentUserEmail);
						console.log("✅ Layout: Successfully connected to UserHub for email:", currentUserEmail);
					} catch (err) {
						console.error("❌ Layout: Failed to connect to UserHub:", err);
					}
				} else if (currentUserEmail) {
					console.warn("⚠️ Layout: Email found but userHubManager not available yet, retrying...");
					// Try again after a short delay in case script is still loading
					setTimeout(async () => {
						if (window.userHubManager) {
							try {
								await window.userHubManager.connect(currentUserEmail);
								console.log("✅ Layout: Successfully connected to UserHub (delayed) for email:", currentUserEmail);
							} catch (err) {
								console.error("❌ Layout: Failed to connect to UserHub (delayed):", err);
							}
						} else {
							console.error("❌ Layout: userHubManager still not available after delay");
						}
					}, 1000);
				} else {
					console.warn("⚠️ Layout: No email found in session");
				}

				// Cleanup on page unload
				window.addEventListener('beforeunload', function() {
					if (window.userHubManager && window.userHubManager.isConnected) {
						console.log("Layout: Disconnecting UserHub on page unload");
						window.userHubManager.disconnect();
					}
				});
			});
		
		</script>
	}

	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>